/**
 * 	Description	: Gradle build file
 * 	Author		: Sanjeev
 */

buildscript {
    repositories {
        mavenCentral()
    }

}

apply plugin: 'application'

mainClassName = 'bux.tradingbot.main.BuxTradingBotServiceSelfHostApp'
version = '1.0'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

configurations {
    testCompile
}

dependencies {

    implementation "org.springframework.boot:spring-boot-starter-web:$springboot"
    implementation 'org.springframework:spring-websocket:5.3.20'
    implementation 'org.springframework:spring-messaging:5.3.20'

    implementation 'org.json:json:20220320'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson"

    implementation "io.springfox:springfox-boot-starter:$springfox"
    implementation "io.springfox:springfox-swagger-ui:$springfox"

    implementation 'commons-io:commons-io:2.11.0'

    compileOnly "org.projectlombok:lombok:$lombok"
    annotationProcessor "org.projectlombok:lombok:$lombok"

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:2.7.0'

    implementation 'com.graphql-java:graphql-java-tools:5.2.4'
    implementation 'com.graphql-java:graphql-spring-boot-starter:5.0.2'
    implementation "com.graphql-java:graphiql-spring-boot-starter:5.0.2"


    testImplementation "org.jmockit:jmockit:1.49"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springboot"

    testCompileOnly "org.projectlombok:lombok:$lombok"
    testAnnotationProcessor "org.projectlombok:lombok:$lombok"

}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'bux.tradingbot.main.BuxTradingBotServiceSelfHostApp'
        )
    }
}

tasks.named('build') {
    doLast {
        println "Copying deps -> lib..."
        copy {
            from configurations.compileClasspath
            into "$buildDir/lib"
        }

        println "Copying Dockerfile to build"
        copy {
            from "./Dockerfile"
            into "$buildDir"
        }

        println "Copying libs -> lib..."
        copy {
            from "$buildDir/libs"
            into "$buildDir/lib"
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}